package SandboxLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.descriptor.AbstractEditorBuilder;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.openapi.editor.menus.transformation.SPropertyInfo;
import TextArea.runtime.EditorCell_TextArea;
import jetbrains.mps.nodeEditor.cells.SPropertyAccessor;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

/*package*/ class ConceptWithProperty_textArea_EditorBuilder_a extends AbstractEditorBuilder {
  @NotNull
  private SNode myNode;

  public ConceptWithProperty_textArea_EditorBuilder_a(@NotNull EditorContext context, @NotNull SNode node) {
    super(context);
    myNode = node;
  }

  @NotNull
  @Override
  public SNode getNode() {
    return myNode;
  }

  /*package*/ EditorCell createCell() {
    return createTextArea_0();
  }

  private EditorCell createTextArea_0() {
    SProperty property = PROPS.prop$brbV;
    getCellFactory().setPropertyInfo(new SPropertyInfo(myNode, property));
    return EditorCell_TextArea.createCell(getEditorContext(), myNode, new SPropertyAccessor(myNode, property, false, false));
  }

  private static final class PROPS {
    /*package*/ static final SProperty prop$brbV = MetaAdapterFactory.getProperty(0x590a8ba24895455bL, 0xbf6c3f39378dab00L, 0x243609db3acb5551L, 0x243609db3acb724dL, "prop");
  }
}
